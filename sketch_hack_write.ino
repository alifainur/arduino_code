#include "Wire.h"

// copy your dumped rom from the reader program,
// paste it here, replace the below commented code:


const unsigned char my_rom1[] PROGMEM=
{
0x7F,0x79,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x2C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x7F,0x79,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x26,0x2C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x5E,0x02,0x58,0x80,0x38,0x4F,0x9C,0x0A,0x43,0xD7,0x3F,0x39,0x45,0x4E,0xE1,0x88,0x31,0xD2,0x23,0x4D,0x50,0x23,0x5D,0x33,0x2D,0xEF,0xCA,0x63,0xE2,0xDE,0xED,0x44,
0x44,0xB9,0xB1,0x74,0xE6,0x8F,0x6F,0xA4,0x23,0x7C,0xF7,0x32,0x9E,0x77,0xAD,0x9B,0x5A,0x43,0xF1,0xDA,0x19,0x2C,0xD6,0x0E,0x6D,0x24,0x9D,0x81,0x7F,0xB4,0x70,0x94,
0x85,0xD2,0x8F,0xF3,0x97,0xCB,0xDF,0x2E,0x6F,0xFA,0x3F,0x1A,0x12,0x79,0x2C,0x8B,0xC8,0x6D,0xFF,0xBF,0x92,0x1F,0x27,0x9A,0x54,0xB4,0x43,0x86,0xDC,0x29,0x56,0x82,
0x31,0x79,0x64,0x75,0x5D,0xEF,0x9C,0xF3,0xB9,0xAD,0x84,0x6E,0x42,0x47,0x38,0xB3,0x70,0x43,0x33,0xE7,0x31,0x5E,0x72,0xBB,0xD3,0x2C,0xF0,0xC5,0x12,0xF8,0x3C,0x06,
0x54,0x91,0x15,0xB5,0x18,0x6A,0xCB,0x18,0x5C,0x3B,0xFD,0x08,0xB2,0x1E,0xD8,0xC7,0x16,0xB7,0x5C,0x49,0x9A,0x3D,0x60,0xEB,0xC8,0xA8,0xAA,0x00,0x2C,0x15,0xD5,0xCE,
0xAA,0xE0,0xFD,0x1B,0x22,0x8D,0x84,0x81,0xBD,0x30,0xC4,0xB8,0xA1,0xB0,0xDF,0xC1,0xE2,0xF2,0x33,0xAD,0x84,0x3C,0x66,0xFB,0x2D,0xC5,0x5A,0x65,0xD9,0x5B,0x1C,0x74,
0x7F,0xE8,0xBF,0xB5,0x32,0x80,0x48,0xB4,0x93,0x12,0x11,0x7A,0x51,0xC9,0xF3,0xA1,0xE3,0xA8,0x9F,0x10,0xD0,0x1F,0x87,0x5E,0x57,0xDF,0x3C,0x2D,0x99,0xDE,0x00,0x2B,
0x3D,0x18,0x43,0xE5,0x55,0x6C,0x9E,0x4D,0x1E,0x01,0x45,0x19,0x57,0x59,0x6A,0x0D,0x3C,0x24,0x59,0x63,0xC5,0x85,0x9D,0x1A,0xE4,0xC6,0xBF,0x2C,0x9B,0xB9,0x22,0x72,
0x05,0x45,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x5E,0x02,0x58,0x80,0x38,0x4F,0x9C,0x0A,0x43,0xD7,0x3F,0x39,0x45,0x4E,0xE1,0x88,0x31,0xD2,0x23,0x4D,0x50,0x23,0x5D,0x33,0x2D,0xEF,0xCA,0x63,0xE2,0xDE,0xED,0x44,
0x44,0xB9,0xB1,0x74,0xE6,0x8F,0x6F,0xA4,0x23,0x7C,0xF7,0x32,0x9E,0x77,0xAD,0x9B,0x5A,0x43,0xF1,0xDA,0x19,0x2C,0xD6,0x0E,0x6D,0x24,0x9D,0x81,0x7F,0xB4,0x70,0x94,
0x85,0xD2,0x8F,0xF3,0x97,0xCB,0xDF,0x2E,0x6F,0xFA,0x3F,0x1A,0x12,0x79,0x2C,0x8B,0xC8,0x6D,0xFF,0xBF,0x92,0x1F,0x27,0x9A,0x54,0xB4,0x43,0x86,0xDC,0x29,0x56,0x82,
0x31,0x79,0x64,0x75,0x5D,0xEF,0x9C,0xF3,0xB9,0xAD,0x84,0x6E,0x42,0x47,0x38,0xB3,0x70,0x43,0x33,0xE7,0x31,0x5E,0x72,0xBB,0xD3,0x2C,0xF0,0xC5,0x12,0xF8,0x3C,0x06,
0x54,0x91,0x15,0xB5,0x18,0x6A,0xCB,0x18,0x5C,0x3B,0xFD,0x08,0xB2,0x1E,0xD8,0xC7,0x16,0xB7,0x5C,0x49,0x9A,0x3D,0x60,0xEB,0xC8,0xA8,0xAA,0x00,0x2C,0x15,0xD5,0xCE,
0xAA,0xE0,0xFD,0x1B,0x22,0x8D,0x84,0x81,0xBD,0x30,0xC4,0xB8,0xA1,0xB0,0xDF,0xC1,0xE2,0xF2,0x33,0xAD,0x84,0x3C,0x66,0xFB,0x2D,0xC5,0x5A,0x65,0xD9,0x5B,0x1C,0x74,
0x7F,0xE8,0xBF,0xB5,0x32,0x80,0x48,0xB4,0x93,0x12,0x11,0x7A,0x51,0xC9,0xF3,0xA1,0xE3,0xA8,0x9F,0x10,0xD0,0x1F,0x87,0x5E,0x57,0xDF,0x3C,0x2D,0x99,0xDE,0x00,0x2B,
0x3D,0x18,0x43,0xE5,0x55,0x6C,0x9E,0x4D,0x1E,0x01,0x45,0x19,0x57,0x59,0x6A,0x0D,0x3C,0x24,0x59,0x63,0xC5,0x85,0x9D,0x1A,0xE4,0xC6,0xBF,0x2C,0x9B,0xB9,0x22,0x72,
0x05,0x45,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x1C,0xDD,0x0C,0xF4,0xA8,0x57,0xF0,0xF0,0xE1,0xDB,0xD4,0xD1,0x14,0x5F,0x1C,0xD0,0xA7,0xD8,0x3F,0x25,0x38,0x63,0x17,0xD4,0xD0,0x22,0xEF,0x66,0xE1,0xD4,0x95,0x10,
0x2C,0x23,0xB8,0xED,0xBE,0xA0,0xC6,0x7A,0xBC,0x40,0xBB,0x6B,0x17,0xB5,0x8D,0x1A,0x30,0xD4,0x8E,0x4A,0xFB,0x64,0xA5,0x2F,0xEA,0x94,0xD2,0x79,0xBF,0xD5,0xE9,0x00,
0x62,0xA3,0x77,0x5F,0x3D,0x0A,0x50,0x19,0x28,0x43,0x32,0xC2,0x04,0xDE,0x1A,0x82,0xDC,0x24,0x56,0x02,0xF2,0x79,0x3B,0xA5,0xF1,0x0C,0x18,0xDA,0x9E,0x64,0xDF,0x64,
0xF8,0xE9,0x9D,0x83,0x05,0xF9,0xEF,0x3E,0x12,0x7B,0x61,0xCB,0x34,0xCA,0xA0,0x2E,0x0E,0x67,0x8F,0x5F,0xF1,0x08,0xBB,0x98,0x4B,0xCD,0xB4,0x8D,0x0E,0xDF,0x88,0x6D,
0xEE,0x94,0x67,0x1A,0xDD,0x41,0x7D,0xA8,0xBE,0x31,0x78,0xF1,0xA4,0xE7,0xD9,0x23,0x2F,0x82,0xAC,0x21,0x4E,0x46,0x8C,0xD2,0xF1,0xDD,0x48,0x6B,0xE7,0xB7,0xC9,0xE9,
0x4B,0xB1,0x10,0x27,0x60,0x84,0x9D,0xDB,0x23,0xCE,0xA8,0x68,0x6C,0x92,0x2E,0xF7,0xE8,0xB3,0x1C,0x2D,0x3B,0xC8,0x51,0x01,0x9B,0xCF,0x5B,0x1D,0x63,0xD1,0xC0,0x30,
0x7B,0x80,0x4E,0x79,0x2A,0x0A,0x66,0x54,0xA9,0x85,0x2E,0x09,0x98,0x44,0x89,0xE4,0x32,0x1B,0x11,0xFB,0x60,0x6B,0x33,0x87,0x3A,0x1E,0x0F,0xFE,0xDF,0x2F,0x50,0x2B,
0xF0,0x9D,0x22,0x79,0x51,0x7A,0x46,0x4B,0x62,0xF2,0x2F,0xE0,0x52,0x50,0xC9,0x9B,0x73,0x04,0xD2,0x5C,0xC5,0x25,0xA1,0x53,0x27,0x4D,0x49,0x1D,0x41,0xB2,0xCB,0xE2,
0xE4,0x24,0xD3,0xB1,0x7B,0xFE,0x24,0x29,0x16,0xFF,0x62,0xFE,0x60,0xAD,0x09,0xAB,0xA9,0xA4,0xA9,0xF1,0x71,0x5A,0x2D,0xBD,0xA6,0x6D,0xF9,0xDC,0x93,0x9B,0x49,0xC7,
0x64,0xB3,0xD8,0x94,0x79,0xD1,0x44,0x1C,0xE2,0x2B,0xCB,0xB4,0x1D,0x36,0x2A,0x1A,0xF0,0x50,0x00,0x5D,0x5E,0x41,0xD9,0xAA,0xFB,0x17,0x0B,0xB1,0x88,0x1D,0x40,0x9F,
0x2D,0xC8,0x00,0xF6,0x17,0xCF,0x70,0x19,0x59,0x4C,0xD0,0x1E,0x53,0xD7,0x4A,0x7B,0xCC,0x18,0xC1,0x24,0xA2,0x52,0x46,0xE1,0x19,0xF6,0xC5,0x25,0x47,0x56,0x8D,0x61,
0x8B,0xB0,0x2F,0xED,0xC3,0x1E,0x53,0x9C,0xF7,0x3D,0x91,0x50,0xA9,0xC1,0x7D,0x9A,0xC8,0x67,0x10,0x61,0xCE,0x97,0x4E,0xB0,0x0D,0x32,0x43,0x73,0xFC,0x88,0x95,0x1C,
0x42,0xB4,0xAE,0x50,0x57,0x67,0x6F,0xA3,0x23,0x3A,0xF8,0x86,0x1D,0x13,0xA6,0x79,0x93,0x5E,0x9B,0x07,0x45,0x6E,0xF6,0xC1,0x4A,0x1E,0x38,0x06,0x02,0x54,0x18,0x20,
0xDB,0x25,0x7F,0x3D,0xAE,0xF0,0x2B,0xE9,0x53,0x7E,0x30,0x9E,0x4D,0x8E,0x64,0xBC,0x20,0xEE,0x65,0x6A,0xA6,0xC9,0x54,0x2E,0x12,0x13,0x03,0x8A,0x66,0x9C,0x11,0x34,
0x0D,0xBA,0x41,0x18,0x92,0x40,0x2E,0x4E,0xB4,0x61,0x33,0xDC,0x08,0x8D,0x2F,0xB8,0x0B,0xE5,0xD5,0x90,0x87,0x95,0x1D,0x33,0x29,0x89,0x1E,0x08,0x57,0x29,0x1D,0xF8,
0xBD,0x6A,0xBD,0x06,0xE8,0xA7,0x9C,0xD3,0xBB,0x0F,0xF5,0xEF,0x35,0x13,0x4A,0x0E,0xEE,0x70,0x86,0x2A,0x0A,0x7F,0x49,0xD2,0x03,0x71,0x51,0xF1,0xDD,0xD6,0x8E,0x58,
0xBE,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x1C,0xDD,0x0C,0xF4,0xA8,0x57,0xF0,0xF0,0xE1,0xDB,0xD4,0xD1,0x14,0x5F,0x1C,0xD0,0xA7,0xD8,0x3F,0x25,0x38,0x63,0x17,0xD4,0xD0,0x22,0xEF,0x66,0xE1,0xD4,0x95,0x10,
0x2C,0x23,0xB8,0xED,0xBE,0xA0,0xC6,0x7A,0xBC,0x40,0xBB,0x6B,0x17,0xB5,0x8D,0x1A,0x30,0xD4,0x8E,0x4A,0xFB,0x64,0xA5,0x2F,0xEA,0x94,0xD2,0x79,0xBF,0xD5,0xE9,0x00,
0x62,0xA3,0x77,0x5F,0x3D,0x0A,0x50,0x19,0x28,0x43,0x32,0xC2,0x04,0xDE,0x1A,0x82,0xDC,0x24,0x56,0x02,0xF2,0x79,0x3B,0xA5,0xF1,0x0C,0x18,0xDA,0x9E,0x64,0xDF,0x64,
0xF8,0xE9,0x9D,0x83,0x05,0xF9,0xEF,0x3E,0x12,0x7B,0x61,0xCB,0x34,0xCA,0xA0,0x2E,0x0E,0x67,0x8F,0x5F,0xF1,0x08,0xBB,0x98,0x4B,0xCD,0xB4,0x8D,0x0E,0xDF,0x88,0x6D,
0xEE,0x94,0x67,0x1A,0xDD,0x41,0x7D,0xA8,0xBE,0x31,0x78,0xF1,0xA4,0xE7,0xD9,0x23,0x2F,0x82,0xAC,0x21,0x4E,0x46,0x8C,0xD2,0xF1,0xDD,0x48,0x6B,0xE7,0xB7,0xC9,0xE9,
0x4B,0xB1,0x10,0x27,0x60,0x84,0x9D,0xDB,0x23,0xCE,0xA8,0x68,0x6C,0x92,0x2E,0xF7,0xE8,0xB3,0x1C,0x2D,0x3B,0xC8,0x51,0x01,0x9B,0xCF,0x5B,0x1D,0x63,0xD1,0xC0,0x30,
0x7B,0x80,0x4E,0x79,0x2A,0x0A,0x66,0x54,0xA9,0x85,0x2E,0x09,0x98,0x44,0x89,0xE4,0x32,0x1B,0x11,0xFB,0x60,0x6B,0x33,0x87,0x3A,0x1E,0x0F,0xFE,0xDF,0x2F,0x50,0x2B,
0xF0,0x9D,0x22,0x79,0x51,0x7A,0x46,0x4B,0x62,0xF2,0x2F,0xE0,0x52,0x50,0xC9,0x9B,0x73,0x04,0xD2,0x5C,0xC5,0x25,0xA1,0x53,0x27,0x4D,0x49,0x1D,0x41,0xB2,0xCB,0xE2,
0xE4,0x24,0xD3,0xB1,0x7B,0xFE,0x24,0x29,0x16,0xFF,0x62,0xFE,0x60,0xAD,0x09,0xAB,0xA9,0xA4,0xA9,0xF1,0x71,0x5A,0x2D,0xBD,0xA6,0x6D,0xF9,0xDC,0x93,0x9B,0x49,0xC7,
0x64,0xB3,0xD8,0x94,0x79,0xD1,0x44,0x1C,0xE2,0x2B,0xCB,0xB4,0x1D,0x36,0x2A,0x1A,0xF0,0x50,0x00,0x5D,0x5E,0x41,0xD9,0xAA,0xFB,0x17,0x0B,0xB1,0x88,0x1D,0x40,0x9F,
0x2D,0xC8,0x00,0xF6,0x17,0xCF,0x70,0x19,0x59,0x4C,0xD0,0x1E,0x53,0xD7,0x4A,0x7B,0xCC,0x18,0xC1,0x24,0xA2,0x52,0x46,0xE1,0x19,0xF6,0xC5,0x25,0x47,0x56,0x8D,0x61,
0x8B,0xB0,0x2F,0xED,0xC3,0x1E,0x53,0x9C,0xF7,0x3D,0x91,0x50,0xA9,0xC1,0x7D,0x9A,0xC8,0x67,0x10,0x61,0xCE,0x97,0x4E,0xB0,0x0D,0x32,0x43,0x73,0xFC,0x88,0x95,0x1C,
0x42,0xB4,0xAE,0x50,0x57,0x67,0x6F,0xA3,0x23,0x3A,0xF8,0x86,0x1D,0x13,0xA6,0x79,0x93,0x5E,0x9B,0x07,0x45,0x6E,0xF6,0xC1,0x4A,0x1E,0x38,0x06,0x02,0x54,0x18,0x20,
0xDB,0x25,0x7F,0x3D,0xAE,0xF0,0x2B,0xE9,0x53,0x7E,0x30,0x9E,0x4D,0x8E,0x64,0xBC,0x20,0xEE,0x65,0x6A,0xA6,0xC9,0x54,0x2E,0x12,0x13,0x03,0x8A,0x66,0x9C,0x11,0x34,
0x0D,0xBA,0x41,0x18,0x92,0x40,0x2E,0x4E,0xB4,0x61,0x33,0xDC,0x08,0x8D,0x2F,0xB8,0x0B,0xE5,0xD5,0x90,0x87,0x95,0x1D,0x33,0x29,0x89,0x1E,0x08,0x57,0x29,0x1D,0xF8,
0xBD,0x6A,0xBD,0x06,0xE8,0xA7,0x9C,0xD3,0xBB,0x0F,0xF5,0xEF,0x35,0x13,0x4A,0x0E,0xEE,0x70,0x86,0x2A,0x0A,0x7F,0x49,0xD2,0x03,0x71,0x51,0xF1,0xDD,0xD6,0x8E,0x58,
0xBE,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};


int eeprom_read_byte(byte deviceaddress, unsigned eeaddr)
{
   byte rdata = 0xff;

   //byte devaddr = deviceaddress | ((eeaddr >> 8) & 0x07);
   byte devaddr = deviceaddress | ((eeaddr >> 8));
   byte addr    = eeaddr;

   Wire.beginTransmission(devaddr);
   Wire.write(int(addr));
   Wire.endTransmission();
   Wire.requestFrom(int(devaddr), 1);
   if (Wire.available()) {
       rdata = Wire.read();
   }
   else
   {
     Serial.print("Wire Not Ready!!!");
   }
   return rdata;
}

void eeprom_write_test()
{
  Wire.beginTransmission(0x50);
  Wire.write(2);
  Wire.write(0xab);
  Wire.endTransmission();
  delay(10);
}

// slow but easy write
void eeprom_write_byte(byte deviceaddress, int eeaddr, byte data)
{
//byte devaddr = deviceaddress | ((eeaddr >> 8) & 0x07);
byte devaddr = deviceaddress | ((eeaddr >> 8));
byte addr = eeaddr;
Wire.beginTransmission(devaddr);
Wire.write(addr);
Wire.write(data);
Wire.endTransmission();
delay(10);
}

//more efficient write
void eeprom_write_page(byte deviceaddress, unsigned eeaddr,
                      const byte * data, byte length)
{
   //byte devaddr = deviceaddress | ((eeaddr >> 8) & 0x07);
   byte devaddr = deviceaddress | ((eeaddr >> 8));
   byte addr    = eeaddr;
   Wire.beginTransmission(devaddr);
   Wire.write(int(addr));
   for (int i = 0; i < length; i++) {
       Wire.write(data[i]);
   }
   Wire.endTransmission();
   delay(10);
}

const int buf_size=16;
unsigned char buf[buf_size];

void setup()
{
  Wire.begin();
  Serial.begin(9600);
 
  Serial.println("\n\n\nStart Writing Rom...\n");

  //eeprom_write_test();

  //more efficient write
  for(int i=0;i<2048/buf_size;i++)
  {
      if(i%16==0)
      {
        Serial.print("current writing page:");
        Serial.println(i);
      }
      for(int j=0;j<buf_size;j++)
      {
        buf[j]=pgm_read_byte_near(my_rom1+i*buf_size +j); //!!!!!!!!switch from my_rom1 and my_rom2 if need
      }
      eeprom_write_page(0x50, i*buf_size, buf, buf_size);  

      //Serial.println(pgm_read_byte_near(my_rom1+i)  ,HEX);
  }

  // slow but easy write
  /*
  for(int i=0;i<2048;i++)
  {
      if(i%32==0)
      {
         Serial.print("current:");
         Serial.println(i);
      }

      eeprom_write_byte(0x50, i, pgm_read_byte_near(my_rom2+i));  //!!!!!!!!switch from my_rom1 and my_rom2 if need

      //Serial.println(pgm_read_byte_near(my_rom2+i)  ,HEX);
  }*/

  Serial.print("Write Done!\n");

  Serial.println("\n\nStart Dumping for Verification...\n");
  Serial.println("Check if this dump matches with before by youself:\n");
  Serial.println("(possibly with some diff tool)\n");
  
  Serial.print("\n");
  Serial.print("const unsigned char my_rom1[] PROGMEM=\n{\n");
  for(int i=0;i<2048;i++)
  {
    if(i) Serial.print(",");
    if(i&&i%32==0) Serial.print("\n");
    Serial.print("0x");
    byte r=eeprom_read_byte(0x50, i);
    if(r<16) Serial.print("0");
    Serial.print(r,HEX);
  }
  Serial.print("};\n");
}
void loop()
{

}
 
